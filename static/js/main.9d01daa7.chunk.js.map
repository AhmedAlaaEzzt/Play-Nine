{"version":3,"sources":["components/stars/stars.js","components/button/button.js","components/answer/answer.js","components/numbers/numbers.js","components/done-frame/done-frame.js","components/game/game-helper.js","components/game/game.js","App.js","reportWebVitals.js","index.js"],"names":["Stars","props","stars","i","numberOfStars","push","className","Button","button","answerIsCorrect","onClick","acceptAnswer","checkAnswer","disabled","selectedNumbers","length","redraw","redraws","Answer","map","number","unSelectNumber","Numbers","NumberList","range","numberClassName","usedNumbers","indexOf","selectNumber","DoneFrame","doneStatus","resetState","possibleCombinationSum","arr","n","pop","listSize","combinationsCount","combinationSum","j","Game","state","initialState","setState","updateDoneStatus","prevState","possibleSolutions","possibleNumbers","filter","randomNumber","concat","reduce","acc","clickedNumber","this","Component","Math","trunc","random","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAWeA,EARD,SAASC,GAErB,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAIF,EAAMG,cAAeD,IACvCD,EAAMG,KAAK,mBAAWC,UAAU,aAAa,cAAY,QAAtCH,IAErB,OAAO,qBAAKG,UAAU,QAAf,SAAwBJ,KCwClBK,EA9CA,SAASN,GACtB,IAAIO,EACJ,OAAQP,EAAMQ,iBACZ,KAAK,EACHD,EACE,wBAAQF,UAAU,kBAAkBI,QAAST,EAAMU,aAAnD,SACE,mBAAGL,UAAU,kBAGjB,MACF,KAAK,EACHE,EACE,wBAAQF,UAAU,iBAAlB,SACE,mBAAGA,UAAU,kBAGjB,MACF,QACEE,EACE,wBACEF,UAAU,kBACVI,QAAST,EAAMW,YACfC,SAA2C,IAAjCZ,EAAMa,gBAAgBC,OAHlC,eAWN,OACE,sBAAKT,UAAU,oBAAf,UACGE,EACD,uBACA,uBACA,yBACEF,UAAU,0BACVI,QAAST,EAAMe,OACfH,SAA4B,IAAlBZ,EAAMgB,QAHlB,UAKE,mBAAGX,UAAU,kBALf,IAKmCL,EAAMgB,eC7BhCC,EAZA,SAASjB,GACtB,OACE,qBAAKK,UAAU,QAAf,SACGL,EAAMa,gBAAgBK,KAAI,SAACC,EAAQjB,GAAT,OACzB,sBAAMO,QAAS,kBAAMT,EAAMoB,eAAeD,IAA1C,SACGA,GADqDjB,S,eC0BjDmB,EA5BC,SAASrB,GACvB,IAAMsB,EAAaC,gBAAM,EAAG,IAEtBC,EAAkB,SAAAL,GACtB,OAAInB,EAAMyB,YAAYC,QAAQP,IAAW,EAChC,OACEnB,EAAMa,gBAAgBa,QAAQP,IAAW,EAC3C,gBADF,GAKT,OACE,qBAAKd,UAAU,mBAAf,SACE,8BACGiB,EAAWJ,KAAI,SAACC,EAAQjB,GAAT,OACd,sBACEG,UAAWmB,EAAgBL,GAC3BV,QAAS,kBAAMT,EAAM2B,aAAaR,IAFpC,SAKGA,GAFIjB,WCVF0B,EATG,SAAA5B,GAChB,OACE,sBAAKK,UAAU,cAAf,UACE,6BAAKL,EAAM6B,aACX,wBAAQpB,QAAST,EAAM8B,WAAYzB,UAAU,oBAA7C,4BCNA0B,EAAyB,SAAzBA,EAAkCC,EAAKC,GAC3C,GAAID,EAAIN,QAAQO,IAAM,EACpB,OAAO,EAET,GAAID,EAAI,GAAKC,EACX,OAAO,EAET,GAAID,EAAIA,EAAIlB,OAAS,GAAKmB,EAExB,OADAD,EAAIE,MACGH,EAAuBC,EAAKC,GAIrC,IAFA,IAAIE,EAAWH,EAAIlB,OACjBsB,EAAoB,GAAKD,EAClBjC,EAAI,EAAGA,EAAIkC,EAAmBlC,IAAK,CAE1C,IADA,IAAImC,EAAiB,EACZC,EAAI,EAAGA,EAAIH,EAAUG,IACxBpC,EAAK,GAAKoC,IACZD,GAAkBL,EAAIM,IAG1B,GAAIL,IAAMI,EACR,OAAO,EAGX,OAAO,GChBHE,E,4MAWJC,MAAQD,EAAKE,e,EACbX,WAAa,WACX,EAAKY,SAASH,EAAKE,iB,EAErBE,iBAAmB,WACjB,EAAKD,UAAS,SAAAE,GACZ,OAAqC,IAAjCA,EAAUnB,YAAYX,OACjB,CAAEe,WAAY,eAEC,IAAtBe,EAAU5B,SACT,EAAK6B,kBAAkBD,QAFnB,EAIE,CAAEf,WAAY,kB,EAK3BgB,kBAAoB,YAAqC,IAAlC1C,EAAiC,EAAjCA,cAAesB,EAAkB,EAAlBA,YAC9BqB,EAAkBvB,gBAAM,EAAG,IAAIwB,QACnC,SAAA5B,GAAM,OAAqC,IAAjCM,EAAYC,QAAQP,MAGhC,OAAOY,EAAuBe,EAAiB3C,I,EAGjDY,OAAS,WACoB,IAAvB,EAAKyB,MAAMxB,SACf,EAAK0B,UACH,SAAAE,GAAS,MAAK,CACZzC,cAAeoC,EAAKS,eACpBxC,gBAAiB,KACjBK,gBAAiB,GACjBG,QAAS4B,EAAU5B,QAAU,KAE/B,EAAK2B,mB,EAITjC,aAAe,WACb,EAAKgC,UACH,SAAAE,GAAS,MAAK,CACZnB,YAAamB,EAAUnB,YAAYwB,OAAOL,EAAU/B,iBACpDA,gBAAiB,GACjBL,gBAAiB,KACjBL,cAAeoC,EAAKS,kBAEtB,EAAKL,mB,EAIThC,YAAc,WACZ,EAAK+B,UAAS,SAAAE,GAAS,MAAK,CAC1BpC,gBACEoC,EAAUzC,gBACVyC,EAAU/B,gBAAgBqC,QAAO,SAACC,EAAKlB,GAAN,OAAYkB,EAAMlB,IAAG,Q,EAG5DN,aAAe,SAAAR,GACT,EAAKqB,MAAM3B,gBAAgBa,QAAQP,IAAW,GAGlD,EAAKuB,UAAS,SAAAE,GAAS,MAAK,CAC1BpC,gBAAiB,KACjBK,gBAAiB+B,EAAU/B,gBAAgBoC,OAAO9B,Q,EAItDC,eAAiB,SAAAgC,GACf,EAAKV,UAAS,SAAAE,GAAS,MAAK,CAC1BpC,gBAAiB,KACjBK,gBAAiB+B,EAAU/B,gBAAgBkC,QACzC,SAAA5B,GAAM,OAAIA,IAAWiC,U,4CAK3B,WACE,MAOIC,KAAKb,MANPrC,EADF,EACEA,cACAK,EAFF,EAEEA,gBACAK,EAHF,EAGEA,gBACAY,EAJF,EAIEA,YACAT,EALF,EAKEA,QACAa,EANF,EAMEA,WAEF,OACE,sBAAKxB,UAAU,YAAf,UACE,2CACA,uBACA,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CAAOF,cAAeA,IACtB,cAAC,EAAD,CACEQ,YAAa0C,KAAK1C,YAClBD,aAAc2C,KAAK3C,aACnBF,gBAAiBA,EACjBK,gBAAiBA,EACjBE,OAAQsC,KAAKtC,OACbC,QAASA,IAEX,cAAC,EAAD,CACEI,eAAgBiC,KAAKjC,eACrBP,gBAAiBA,OAGrB,uBACCgB,EACC,cAAC,EAAD,CAAWA,WAAYA,EAAYC,WAAYuB,KAAKvB,aAEpD,cAAC,EAAD,CACEjB,gBAAiBA,EACjBc,aAAc0B,KAAK1B,aACnBF,YAAaA,W,GA1HN6B,aAAbf,EACGS,aAAe,kBAAMO,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GADxDlB,EAEGE,aAAe,iBAAO,CAC3B5B,gBAAiB,GACjBY,YAAa,GACbtB,cAAeoC,EAAKS,eACpBxC,gBAAiB,KACjBQ,QAAS,EACTa,WAAY,OAyHDU,QCpITmB,G,kKACJ,WACE,OACE,8BACE,cAAC,EAAD,U,GAJUJ,cAUHI,ICHAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d01daa7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"./stars.css\";\r\nconst Stars = function(props) {\r\n  let stars = [];\r\n  for (let i = 0; i < props.numberOfStars; i++) {\r\n    stars.push(<i key={i} className=\"fa fa-star\" aria-hidden=\"true\" />);\r\n  }\r\n  return <div className=\"col-5\">{stars}</div>;\r\n};\r\n\r\nexport default Stars;\r\n","import React from \"react\";\r\n\r\nconst Button = function(props) {\r\n  let button;\r\n  switch (props.answerIsCorrect) {\r\n    case true:\r\n      button = (\r\n        <button className=\"btn btn-success\" onClick={props.acceptAnswer}>\r\n          <i className=\"fa fa-check\" />\r\n        </button>\r\n      );\r\n      break;\r\n    case false:\r\n      button = (\r\n        <button className=\"btn btn-danger\">\r\n          <i className=\"fa fa-times\" />\r\n        </button>\r\n      );\r\n      break;\r\n    default:\r\n      button = (\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={props.checkAnswer}\r\n          disabled={props.selectedNumbers.length === 0}\r\n        >\r\n          =\r\n        </button>\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-2 text-center\">\r\n      {button}\r\n      <br />\r\n      <br />\r\n      <button\r\n        className=\"btn btn-warning  btn-sm\"\r\n        onClick={props.redraw}\r\n        disabled={props.redraws === 0}\r\n      >\r\n        <i className=\"fa fa-refresh\" /> {props.redraws}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nconst Answer = function(props) {\r\n  return (\r\n    <div className=\"col-5\">\r\n      {props.selectedNumbers.map((number, i) => (\r\n        <span onClick={() => props.unSelectNumber(number)} key={i}>\r\n          {number}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n","import React from \"react\";\r\nimport \"./numbers.css\";\r\nimport { range } from \"lodash\";\r\nconst Numbers = function(props) {\r\n  const NumberList = range(1, 10);\r\n\r\n  const numberClassName = number => {\r\n    if (props.usedNumbers.indexOf(number) >= 0) {\r\n      return \"used\";\r\n    } else if (props.selectedNumbers.indexOf(number) >= 0) {\r\n      return \"selected\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div>\r\n        {NumberList.map((number, i) => (\r\n          <span\r\n            className={numberClassName(number)}\r\n            onClick={() => props.selectNumber(number)}\r\n            key={i}\r\n          >\r\n            {number}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\n\r\nconst DoneFrame = props => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h2>{props.doneStatus}</h2>\r\n      <button onClick={props.resetState} className=\"btn btn-secondary\">Play Again</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoneFrame;\r\n","const possibleCombinationSum = function(arr, n) {\r\n  if (arr.indexOf(n) >= 0) {\r\n    return true;\r\n  }\r\n  if (arr[0] > n) {\r\n    return false;\r\n  }\r\n  if (arr[arr.length - 1] > n) {\r\n    arr.pop();\r\n    return possibleCombinationSum(arr, n);\r\n  }\r\n  var listSize = arr.length,\r\n    combinationsCount = 1 << listSize;\r\n  for (var i = 1; i < combinationsCount; i++) {\r\n    var combinationSum = 0;\r\n    for (var j = 0; j < listSize; j++) {\r\n      if (i & (1 << j)) {\r\n        combinationSum += arr[j];\r\n      }\r\n    }\r\n    if (n === combinationSum) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { possibleCombinationSum };\r\n","import React, { Component } from \"react\";\r\nimport Stars from \"../stars/stars.js\";\r\nimport Button from \"../button/button.js\";\r\nimport Answer from \"../answer/answer.js\";\r\nimport Numbers from \"../numbers/numbers.js\";\r\nimport DoneFrame from \"../done-frame/done-frame.js\";\r\nimport { range } from \"lodash\";\r\nimport { possibleCombinationSum } from \"./game-helper.js\";\r\nclass Game extends Component {\r\n  static randomNumber = () => Math.trunc(Math.random() * 9) + 1;\r\n  static initialState = () => ({\r\n    selectedNumbers: [],\r\n    usedNumbers: [],\r\n    numberOfStars: Game.randomNumber(),\r\n    answerIsCorrect: null,\r\n    redraws: 5,\r\n    doneStatus: null\r\n  });\r\n\r\n  state = Game.initialState();\r\n  resetState = () =>{\r\n    this.setState(Game.initialState())\r\n  }\r\n  updateDoneStatus = () => {\r\n    this.setState(prevState => {\r\n      if (prevState.usedNumbers.length === 9) {\r\n        return { doneStatus: \"Done. Nice!\" };\r\n      } else if (\r\n        prevState.redraws === 0 &&\r\n        !this.possibleSolutions(prevState)\r\n      ) {\r\n        return { doneStatus: \"Game Over!\" };\r\n      }\r\n    });\r\n  };\r\n\r\n  possibleSolutions = ({ numberOfStars, usedNumbers }) => {\r\n    const possibleNumbers = range(1, 10).filter(\r\n      number => usedNumbers.indexOf(number) === -1\r\n    );\r\n\r\n    return possibleCombinationSum(possibleNumbers, numberOfStars);\r\n  };\r\n\r\n  redraw = () => {\r\n    if (this.state.redraws === 0) return;\r\n    this.setState(\r\n      prevState => ({\r\n        numberOfStars: Game.randomNumber(),\r\n        answerIsCorrect: null,\r\n        selectedNumbers: [],\r\n        redraws: prevState.redraws - 1\r\n      }),\r\n      this.updateDoneStatus\r\n    );\r\n  };\r\n\r\n  acceptAnswer = () => {\r\n    this.setState(\r\n      prevState => ({\r\n        usedNumbers: prevState.usedNumbers.concat(prevState.selectedNumbers),\r\n        selectedNumbers: [],\r\n        answerIsCorrect: null,\r\n        numberOfStars: Game.randomNumber()\r\n      }),\r\n      this.updateDoneStatus\r\n    );\r\n  };\r\n\r\n  checkAnswer = () => {\r\n    this.setState(prevState => ({\r\n      answerIsCorrect:\r\n        prevState.numberOfStars ===\r\n        prevState.selectedNumbers.reduce((acc, n) => acc + n, 0)\r\n    }));\r\n  };\r\n  selectNumber = number => {\r\n    if (this.state.selectedNumbers.indexOf(number) >= 0) {\r\n      return;\r\n    }\r\n    this.setState(prevState => ({\r\n      answerIsCorrect: null,\r\n      selectedNumbers: prevState.selectedNumbers.concat(number)\r\n    }));\r\n  };\r\n\r\n  unSelectNumber = clickedNumber => {\r\n    this.setState(prevState => ({\r\n      answerIsCorrect: null,\r\n      selectedNumbers: prevState.selectedNumbers.filter(\r\n        number => number !== clickedNumber\r\n      )\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      numberOfStars,\r\n      answerIsCorrect,\r\n      selectedNumbers,\r\n      usedNumbers,\r\n      redraws,\r\n      doneStatus\r\n    } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>Play Nine</h3>\r\n        <hr />\r\n        <div className=\"row\">\r\n          <Stars numberOfStars={numberOfStars} />\r\n          <Button\r\n            checkAnswer={this.checkAnswer}\r\n            acceptAnswer={this.acceptAnswer}\r\n            answerIsCorrect={answerIsCorrect}\r\n            selectedNumbers={selectedNumbers}\r\n            redraw={this.redraw}\r\n            redraws={redraws}\r\n          />\r\n          <Answer\r\n            unSelectNumber={this.unSelectNumber}\r\n            selectedNumbers={selectedNumbers}\r\n          />\r\n        </div>\r\n        <br />\r\n        {doneStatus ? (\r\n          <DoneFrame doneStatus={doneStatus} resetState={this.resetState}/>\r\n        ) : (\r\n          <Numbers\r\n            selectedNumbers={selectedNumbers}\r\n            selectNumber={this.selectNumber}\r\n            usedNumbers={usedNumbers}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Game from \"./components/game/game.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Game />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}